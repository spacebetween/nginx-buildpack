daemon off;
#Heroku dynos have 4 cores.
worker_processes 4;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
        gzip on;
        gzip_comp_level 2;
        gzip_min_length 512;

	proxy_cache_path /app/cache levels=1:2 keys_zone=one:10m;

	log_format l2met 'measure.nginx.service=$request_time request_id=$http_heroku_request_id';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
 	}

	server {
		listen <%= ENV["PORT"] %>;
		server_name _;
		keepalive_timeout 5;

		location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;

			proxy_pass http://localhost:<%= ENV["EXPRESS_PORT"] %>;
			proxy_cache one;
			proxy_max_temp_file_size 1M;
		}
		
		# cache.appcache, your document html and data
		location ~* \.(?:manifest|appcache|html?|xml|json)$ {
		  expires -1;
		  # access_log logs/static.log; # I don't usually include a static log
		}

		# Feed
		location ~* \.(?:rss|atom)$ {
		  expires 1h;
		  add_header Cache-Control "public";
		}

		# Media: images, icons, video, audio, HTC
		location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
		  expires 1M;
		  access_log off;
		  add_header Cache-Control "public";
		}

		# CSS and Javascript
		location ~* \.(?:css|js)$ {
		  expires 1y;
		  access_log off;
		  add_header Cache-Control "public";
		}
	}
}
